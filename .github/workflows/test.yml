name: Test Coverage Comment

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: false

jobs:
  coverage:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}

    steps:
      # 1. 소스코드 체크아웃
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. 테스트용 MySQL 컨테이너 설정
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: ${{ secrets.DB_NAME }}
          mysql user: ${{ secrets.DB_USERNAME }}
          mysql password: ${{ secrets.DB_PASSWORD }}

      # 3. JDK 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 4. Gradle 테스트 및 JaCoCo 리포트 생성
      - name: Run Tests and Coverage
        run: ./gradlew clean test jacocoTestReport
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      # 5. JaCoCo 뱃지 및 coverage-summary.md 생성
      - name: Generate JaCoCo Badge and Summary
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
          badges-directory: coverage/badges/pr-${{ env.PR_NUMBER }}
          generate-summary: true
          summary-filename: coverage-summary.md
      
      # 6. PR 번호별 HTML 커버리지 리포트 복사
      - name: Copy coverage HTML report to publish folder
        run: |
          mkdir -p coverage/pr-${PR_NUMBER}
          cp -r build/reports/jacoco/test/html/* coverage/pr-${PR_NUMBER}/
      
      # 7. GitHub Pages에 coverage summary, HTML, badge 업로드
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage
          publish_branch: gh-pages
      
      # 8. PR 코멘트 작성: coverage-summary.md의 내용을 그대로 코멘트로 삽입
      - name: Post coverage summary as PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          header: coverage
          path: coverage/badges/pr-${{ env.PR_NUMBER }}/coverage-summary.md
