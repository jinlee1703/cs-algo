name: Test Coverage Comment

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  coverage:
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      # 1. 소스코드 체크아웃
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. Java 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. MySQL 설정
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: ${{ secrets.DB_NAME }}
          mysql user: ${{ secrets.DB_USERNAME }}
          mysql password: ${{ secrets.DB_PASSWORD }}

      # 4. Gradle 캐시
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 5. 테스트 및 커버리지 리포트 생성
      - name: Run Tests and Coverage
        run: ./gradlew clean test jacocoTestReport

      # 6. Instruction 커버리지 추출
      - name: Extract coverage from report
        id: coverage
        run: |
          REPORT_FILE="build/reports/jacoco/test/jacocoTestReport.xml"
          if [ -f "$REPORT_FILE" ]; then
            COVERED=$(grep -A 2 '<counter type="INSTRUCTION"' $REPORT_FILE | grep 'covered' | awk -F'"' '{covered += $2; missed += $4} END {if ((covered + missed) > 0) printf("%.2f", covered / (covered + missed) * 100); else print "0.00"}')
            echo "coverage=$COVERED" >> $GITHUB_OUTPUT
          else
            echo "coverage=0.00" >> $GITHUB_OUTPUT
          fi

      # 7. JaCoCo HTML 리포트 Artifact 업로드
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html-report
          path: build/reports/jacoco/test/html

      # 8. PR 코멘트에 커버리지 요약 + 링크
      - name: Add coverage comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            🔍 **Test Coverage Report**
            > ✅ Instruction coverage: `${{ steps.coverage.outputs.coverage }}%`

            📄 [Download Full HTML Report](https://github.com/jinlee1703/cs-algo/actions/runs/${{ github.run_id }})

            _This comment was automatically generated by GitHub Actions._
