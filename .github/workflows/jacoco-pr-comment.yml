name: Test Coverage Comment

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  coverage:
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      # 1. 소스코드 체크아웃
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # SonarCloud 분석을 위한 전체 이력

      # 2. Java 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. MySQL 설정
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: ${{ secrets.DB_NAME }}
          mysql user: ${{ secrets.DB_USERNAME }}
          mysql password: ${{ secrets.DB_PASSWORD }}

      # 4. Gradle 캐시
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # 5. 테스트 + 커버리지 + Sonar 분석 (build.gradle 설정 기반)
      - name: Run Tests and SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew clean test jacocoTestReport build sonar --info

      # 6. PR별 JaCoCo HTML 리포트를 GitHub Pages에 배포
      - name: Deploy coverage report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: build/reports/jacoco/test/html
          destination_dir: coverage/pr-${{ github.event.pull_request.number }}

      # 7. SonarCloud에서 PR용 커버리지 수치 조회
      - name: Get coverage from SonarCloud (PR-specific)
        id: sonar
        run: |
          echo "Fetching PR-specific coverage from SonarCloud..."
          PR_NUMBER=${{ github.event.pull_request.number }}
          RESPONSE=$(curl -s "https://sonarcloud.io/api/measures/component?component=jinlee1703_cs-algo&metricKeys=coverage&pullRequest=$PR_NUMBER" \
            -H "Authorization: Bearer $SONAR_TOKEN")
          COVERAGE=$(echo "$RESPONSE" | jq -r '.component.measures[0].value')
          echo "📊 Coverage: $COVERAGE%"
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

      # 8. PR 코멘트 남기기
      - name: Add coverage comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            🔍 **Test Coverage Report (via SonarCloud)**
            > ✅ Line Coverage: `${{ steps.sonar.outputs.coverage }}%`

            📄 [View Full HTML Report](https://TEAM-JJINS.github.io/cs-algo/coverage/pr-${{ github.event.pull_request.number }}/index.html)  
            🔎 [View SonarCloud Dashboard](https://sonarcloud.io/project/overview?id=jinlee1703_cs-algo)

            _This comment was automatically generated by GitHub Actions._
